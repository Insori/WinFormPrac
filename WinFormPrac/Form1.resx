<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>